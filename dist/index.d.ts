// Generated by dts-bundle-generator v9.5.1

export interface LogoProperty {
	onlyCircle: boolean;
	drawStart: number;
	drawProgress: number;
	innerRadius: number;
	outerRadius: number;
	tailEndDistance: number;
	lineThickness: number;
	division: number;
	mask: boolean;
	opacityStart: number;
	opacityEnd: number;
	opacityCurve: string;
	rgbStart: string;
	rgbEnd: string;
	rgbCurve: string;
	paintDivision: number;
	paintOverlap: number;
	animCurve: string;
	animDuration: number;
	size: number;
	[ken: string]: string | number | boolean;
}
declare class ShapeBase {
	element: SVGElement;
	constructor(baseElement: "rect" | "path" | "g");
	protected setAttributes(target: SVGElement, props: {
		[key: string]: string | number;
	}): void;
}
declare class LogoRootGraphics extends ShapeBase {
	constructor(id: string);
}
declare class TailMask extends ShapeBase {
	private type;
	constructor(type: "iris" | "paint");
	draw(props: LogoProperty, h: number): void;
}
export type LogoAnimFunc = (deltaTime: number) => void;
declare class LogoBase {
	svg: SVGElement;
	protected rootGraphics: LogoRootGraphics;
	protected mask: TailMask;
	props: LogoProperty;
	private static _id;
	protected logoId: number;
	private _size;
	set size(value: number);
	get size(): number;
	constructor(svg: SVGElement, id: "iris" | "paint", props: LogoProperty);
	update(props: Partial<LogoProperty>): void;
	append(): void;
	remove(): void;
	anim(props: Partial<LogoProperty>): void;
	protected getSVG(): string;
	getSVGURL(): string;
	private enterFrameFunc;
	private isEnterFrame;
	private currentKey;
	private intervalTimer;
	set onEnterFrame(func: LogoAnimFunc);
	get deleteEnterFrame(): boolean;
}
declare class IrisLogo extends LogoBase {
	private lineContainer;
	private lineTailContainer;
	constructor(svgElement: SVGElement, props: LogoProperty);
	update(props: Partial<LogoProperty>): void;
}
declare class PaintLogo extends LogoBase {
	private arcContainer;
	private tail;
	private tailCircular;
	constructor(svgElement: SVGElement, props: LogoProperty);
	update(props: LogoProperty): void;
}
export declare class AkariLogo {
	el: SVGElement;
	svgLogo: IrisLogo | PaintLogo;
	private _type;
	get type(): "iris" | "paint";
	set type(value: "iris" | "paint");
	get size(): number;
	set size(value: number);
	props: LogoProperty;
	constructor(type: "iris" | "paint", props: Partial<LogoProperty>);
	update(props: Partial<LogoProperty>): void;
	anim(props: Partial<LogoProperty>, duration: number): void;
}

export {};
